parameters:
  pythonVersion: ''
  runUnitTestsOnly: 'false'
  runWithAzureCliReleased: 'false'
  path: ''

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: ${{ parameters.pythonVersion }}
      architecture: 'x64'

  - ${{ if eq(parameters.runWithAzureCliReleased, 'false') }}:
    - template: install-azure-cli-edge.yml

  - ${{ if eq(parameters.runWithAzureCliReleased, 'true') }}:
    - template: install-azure-cli-released.yml

  - template: download-install-local-azure-test-sdk.yml

  - template: setup-ci-machine.yml

  - template: download-install-local-azure-iot-cli-extension.yml

  - template: set-pythonpath.yml

  - template: set-testenv-sentinel.yml

  - ${{ if eq(parameters.runUnitTestsOnly, 'false') }}:
    - task: AzureCLI@2
      displayName: 'Test: ${{ parameters.path }}'
      inputs:
        azureSubscription: AzIoTCLIService
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: pytest -vv -r azext_iot/tests/${{ parameters.path }} --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-${{ parameters.path }}.xml --cov-report=xml

  - ${{ if eq(parameters.runUnitTestsOnly, 'true') }}:
    - script: pytest -vv -r azext_iot/tests/${{ parameters.path }} -k "_unit" --cov=azext_iot --cov-config .coveragerc --junitxml=junit/test-iotext-unit-${{ parameters.path }}.xml --cov-report=xml
      displayName: 'Unit Test: ${{ parameters.path }}'
